#------------------------------------------------------------------------------
# GitHub Actions Workflow - Automated Build-Matrix Refresh
#
# Purpose
#   • Executes `scripts/update_build_matrix.py` on a schedule or on demand.
#   • If the script determines that `.ci/build-matrix.yml` needs changing:
#       1. Regenerate the file.
#       2. Commit the change on a new, uniquely-named branch.
#       3. Push the branch to the repository.
#       4. Open (or update) a Pull Request containing the change.
#       5. Approve the PR using the PAT stored in `PAT_ACTIONS`.
#       6. Enable GitHub’s native *auto-merge* so the PR merges once **all**
#          required checks succeed.
#
# Why the personal-access token (PAT)?
#   • The default `GITHUB_TOKEN` cannot satisfy branch-protection rules that
#     require an approving review.  A PAT is therefore used *only* for the
#     approval + auto-merge steps.  All other operations (checkout, pushing the
#     branch, PR creation) use the built-in `github-actions[bot]` identity so
#     the approving user is **different** to the PR author - GitHub allows the
#     review.
#
# ──────────────────────────────────────────────────────────────────────────────
# Author : Troy Kelly <troy@team.production.city>
# History:
#   2025-05-01 • Initial implementation
#   2025-05-02 • Fix: avoid self-approval by scoping PAT usage
#   2025-05-02 • Fix: provide GH_TOKEN for gh CLI in PR-creation step
#------------------------------------------------------------------------------

name: Refresh Build Matrix

on:
  # Weekly at 23:05 UTC every Monday
  schedule:
    - cron: '5 23 * * 1'
  # Manual trigger button in the Actions UI
  workflow_dispatch:

#--------------------------------------------------------------------#
# Repository-wide default permissions
#--------------------------------------------------------------------#
permissions:
  contents: write        # commit + push
  pull-requests: write   # open / approve / merge PRs

#--------------------------------------------------------------------#
# Single-job workflow
#--------------------------------------------------------------------#
jobs:
  update-matrix:
    name: Update build-matrix file & raise PR
    runs-on: ubuntu-latest

    # Shared environment (PAT **not** exported as GH_TOKEN globally)
    env:
      PYTHON_VERSION: '3.12'
      PAT_ACTIONS: ${{ secrets.PAT_ACTIONS }}

    steps:
      #------------------------------------------------------------------#
      # 0. Checkout full repository history (for branch/PR detection)
      #------------------------------------------------------------------#
      - name: 📥  Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      #------------------------------------------------------------------#
      # 1. Prepare Python runtime (PyYAML needed by the matrix script)
      #------------------------------------------------------------------#
      - name: 🐍  Set-up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦  Install runtime dependencies
        run: |
          pip install --quiet --upgrade pyyaml

      #------------------------------------------------------------------#
      # 2. Dry-run - determine whether a matrix update is required
      #------------------------------------------------------------------#
      - name: 🔍  Evaluate matrix status (dry-run)
        id: check
        shell: bash
        run: |
          set -euo pipefail
          set +e
          python scripts/update_build_matrix.py --dry-run
          rc=$?
          set -e
          if [[ "$rc" == 2 ]]; then
            echo "changed=true"  >>"$GITHUB_OUTPUT"
          elif [[ "$rc" == 0 ]]; then
            echo "changed=false" >>"$GITHUB_OUTPUT"
          else
            echo "❌  update_build_matrix.py failed (rc=${rc})" >&2
            exit "$rc"
          fi

      - name: ✅  Matrix already up-to-date - nothing to do
        if: steps.check.outputs.changed == 'false'
        run: echo "No changes detected - exiting early."

      #------------------------------------------------------------------#
      # 3. Regenerate the matrix & commit on new branch
      #------------------------------------------------------------------#
      - name: 🛠️  Regenerate matrix file
        if: steps.check.outputs.changed == 'true'
        run: |
          python scripts/update_build_matrix.py

      - name: 🗃️  Commit & push branch
        if: steps.check.outputs.changed == 'true'
        id: commit
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        shell: bash
        run: |
          set -euo pipefail
          branch="ci/update-build-matrix-$(date -u +%Y%m%d%H%M%S)"
          git switch -c "$branch"
          git add .ci/build-matrix.yml
          git commit -m "ci(matrix): refresh build matrix automatically"
          git push --set-upstream origin "$branch"
          echo "branch=$branch" >>"$GITHUB_OUTPUT"

      #------------------------------------------------------------------#
      # 4. Install GitHub CLI (official Debian package)
      #------------------------------------------------------------------#
      - name: 🧰  Install GitHub CLI
        if: steps.check.outputs.changed == 'true'
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y gh

      #------------------------------------------------------------------#
      # 5. Create or update the Pull Request
      #     (uses default GITHUB_TOKEN via GH_TOKEN)
      #------------------------------------------------------------------#
      - name: 📨  Create / update Pull Request
        if: steps.check.outputs.changed == 'true'
        id: pr
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          set -euo pipefail

          branch="${{ steps.commit.outputs.branch }}"
          title="ci: Refresh Saltcorn build matrix ($(date -u +%Y-%m-%d))"

          body=$(cat <<'EOF'
          ## 🤖 Automated Build-Matrix Refresh

          This PR was opened automatically by the **Refresh Build Matrix** workflow.
          It updates `.ci/build-matrix.yml` so the container pipeline tracks the
          most recent Saltcorn releases.

          The PR will be auto-approved and auto-merged after all required checks
          pass - no human intervention should be necessary.
          EOF
          )

          if gh pr view "$branch" >/dev/null 2>&1; then
            number=$(gh pr view "$branch" --json number --jq '.number')
            gh pr edit "$number" --title "$title" --body "$body"
          else
            gh pr create \
              --base main \
              --head "$branch" \
              --title "$title" \
              --body "$body" \
              --label "automation,build-matrix"
            number=$(gh pr view "$branch" --json number --jq '.number')
          fi

          echo "number=${number}" >>"$GITHUB_OUTPUT"

      #------------------------------------------------------------------#
      # 6. Approve the PR (PAT required - export GH_TOKEN **here only**)
      #------------------------------------------------------------------#
      - name: ✔️  Approve Pull Request
        if: steps.check.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ env.PAT_ACTIONS }}
        run: |
          gh pr review "${{ steps.pr.outputs.number }}" \
            --approve \
            --body "Automated approval by CI workflow - see workflow logs."

      #------------------------------------------------------------------#
      # 7. Enable auto-merge (also requires PAT)
      #
      #    `--auto` instructs GitHub to merge **after** all required status
      #    checks and reviews have succeeded.  The command itself returns
      #    immediately; the merge occurs asynchronously.
      #------------------------------------------------------------------#
      - name: 🔀  Enable auto-merge
        if: steps.check.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ env.PAT_ACTIONS }}
        run: |
          gh pr merge "${{ steps.pr.outputs.number }}" \
            --auto \
            --merge \
            --delete-branch \
            --squash=false    # keep full merge commit for provenance